version: 2

branches:
  ignore:
    - gh-pages

anchors:
- &image_default circleci/node:10.14
- &working_directory ~/repo

jobs:
  resolve-dependencies:
    docker:
    - image: *image_default
    working_directory: *working_directory
    steps:
    - add_ssh_keys:
        fingerprints:
        - "e0:e0:5b:78:04:7b:4a:b6:79:d5:31:6a:af:3c:22:c1"
    - checkout
    - restore_cache:
        keys:
        - v1-dependencies-{{ checksum "package.json" }}
        # fallback to using the latest cache if no exact match is found
        - v1-dependencies-

    - run: yarn install

    - save_cache:
        paths:
        - node_modules
        key: v1-dependencies-{{ checksum "package.json" }}
    - persist_to_workspace:
        root: .
        paths:
        - .

  build:
    docker:
    - image: *image_default
    working_directory: *working_directory
    steps:
    - attach_workspace:
        at: .
    - run:
        name: Running Build Step
        command: yarn run build
    - persist_to_workspace:
        root: .
        paths:
        - .

  test:
    docker:
    - image: *image_default
    working_directory: *working_directory
    steps:
    - attach_workspace:
        at: .
    - run:
        name: Running Lint
        command: yarn run lint:ci
    - run:
        name: Running Test
        command: yarn run test
    - persist_to_workspace:
        root: .
        paths:
        - .
  coverage:
    docker:
    - image: *image_default
    working_directory: *working_directory
    steps:
    - attach_workspace:
        at: .
    - run:
        name: Running Code Coverage
        command: yarn test:cov:ci
    - persist_to_workspace:
        root: .
        paths:
        - .

  deploy:
    docker:
    - image: *image_default
    working_directory: *working_directory
    steps:
    - attach_workspace:
        at: .
    - run:
        name: Running Code Coverage
        command: yarn run deploy
    - persist_to_workspace:
        root: .
        paths:
        - .

workflows:
  version: 2
  ci-all:
    jobs:
      - resolve-dependencies
      - build:
          requires:
          - resolve-dependencies
      - test:
          requires:
          - resolve-dependencies
          - build
      - coverage:
          requires:
          - resolve-dependencies
          - test
      - deploy:
          requires:
          - build
          - test