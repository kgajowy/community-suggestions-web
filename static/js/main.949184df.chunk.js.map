{"version":3,"sources":["people/avatar-placeholder.svg","actions/suggestions.ts","shared/hooks/use-redux.ts","shared/services/community-suggestions.ts","shared/effects/suggestions.effect.ts","Effects.tsx","InitApp.tsx","shared/styles/media.ts","reducers/suggestions.ts","reducers/index.ts","store.ts","theme/styled.ts","shared/components/Button.tsx","submit-form/components/SubmitDescription.tsx","submit-form/components/SubmitName.tsx","submit-form/components/SubmitForm.tsx","submit-form/SubmitSuggestion.tsx","people/Avatar.tsx","suggestions/components/Suggestion.tsx","suggestions/components/Suggestions.tsx","suggestions/CommunitySuggestions.tsx","theme/default-theme.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","SuggestionActionTypes","SuggestionsAcquired","payload","type","Acquired","SuggestionsError","Error","SuggestionSubmitError","SubmitError","SuggestionSubmitOk","SubmitOk","useRedux","_useContext","useContext","ReactReduxContext","storeState","store","dispatch","someData","Array","fill","title","description","getSuggestions","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","supporters","voters","wrap","_context","prev","next","axios","get","sent","data","results","abrupt","map","s","objectSpread","stop","this","apply","arguments","submitSuggestion","_ref2","_callee2","_context2","Promise","resolve","setTimeout","_x","useSuggestions","_useRedux","_useRedux2","slicedToArray","suggestionsState","suggestions","pending","submitPending","submittedSuggestion","useEffect","console","log","length","then","r","catch","e","Effects","react","InitApp","props","Get","React","connect","media","css","_templateObject2","MOBILE_BREAKPOINT","initialState","error","undefined","submitError","combineReducers","state","action","Submit","concat","toConsumableArray","createStore","communityApp","styledComponents","styled","default","ThemeProvider","createGlobalStyle","keyframes","Button","button","Button_templateObject","theme","primaryColor","secondaryColor","TextArea","textarea","SubmitDescription_templateObject","SubmitDescription","SubmitDescription_templateObject2","SubmitName","input","SubmitName_templateObject","Container","div","SubmitForm_templateObject","InputContainer","SubmitForm_templateObject2","_templateObject3","primaryColorBackground","secondaryColorBackground","SubmitForm","onSubmit","disabled","_useState","useState","_useState2","setTitle","_useState3","_useState4","setDescription","onChange","event","currentTarget","value","onClick","SubmitSuggestion","SubmitForm_SubmitForm","Image","img","Avatar_templateObject","Avatar","url","className","react_progressive_image_dist_default","delay","src","placeholder","Suggestion_templateObject","CondensedAvatar","Suggestion_templateObject2","Suggestion","Suggestion_Container","i","Avatar_Avatar","picture","medium","key","Suggestions_templateObject","Suggestions","_ref$suggestions","Suggestions_Container","Suggestion_Suggestion","assign","CommunitySuggestions","Suggestions_Suggestions","defaultTheme","CenterColumn","App_templateObject","App_templateObject2","App","react_default","createElement","es","src_InitApp","Effects_Effects","dist","SubmitSuggestion_SubmitSuggestion","CommunitySuggestions_CommunitySuggestions","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.949184df.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar-placeholder.fa7becf5.svg\";","import Suggestion from '../shared/interfaces/suggestion'\n\nexport enum SuggestionActionTypes {\n    Get = 'suggestions.get',\n    Acquired = 'suggestions.acquired',\n    Error = 'suggestions.error',\n    Submit = 'suggestions.submit',\n    SubmitError = 'suggestions.submit.error',\n    SubmitOk = 'suggestions.submit.ok',\n}\n\ninterface Action<T, P> {\n    type: T\n    payload?: P\n}\n\ntype SuggestionGetAction = Action<SuggestionActionTypes.Get, null>\ntype SuggestionAcquiredAction = Action<SuggestionActionTypes.Acquired, Suggestion[]>\ntype SuggestionErrorAction = Action<SuggestionActionTypes.Error, any>\ntype SuggestionSubmitAction = Action<SuggestionActionTypes.Submit, Suggestion>\ntype SuggestionSubmitErrorAction = Action<SuggestionActionTypes.SubmitError, any>\ntype SuggestionSubmitOkAction = Action<SuggestionActionTypes.SubmitOk, Suggestion>\n\nexport const SuggestionsGet = (): SuggestionGetAction => ({\n    type: SuggestionActionTypes.Get,\n})\n\nexport const SuggestionsAcquired = (payload: Suggestion[]): SuggestionAcquiredAction => ({\n    type: SuggestionActionTypes.Acquired,\n    payload,\n})\n\nexport const SuggestionsError = (payload: any): SuggestionErrorAction => ({\n    type: SuggestionActionTypes.Error,\n    payload,\n})\n\nexport const SuggestionSubmit = (payload: Suggestion): SuggestionSubmitAction => ({\n    type: SuggestionActionTypes.Submit,\n    payload,\n})\n\nexport const SuggestionSubmitError = (payload: any): SuggestionSubmitErrorAction => ({\n    type: SuggestionActionTypes.SubmitError,\n    payload,\n})\n\nexport const SuggestionSubmitOk = (payload: Suggestion): SuggestionSubmitOkAction => ({\n    type: SuggestionActionTypes.SubmitOk,\n    payload,\n})\n\nexport type SuggestionActions =\n    SuggestionGetAction |\n    SuggestionAcquiredAction |\n    SuggestionErrorAction |\n    SuggestionSubmitAction |\n    SuggestionSubmitErrorAction |\n    SuggestionSubmitOkAction\n","import {useContext} from 'react'\n// @ts-ignore\nimport {ReactReduxContext} from 'react-redux'\nimport {Action, Dispatch} from 'redux'\nimport {RootState} from '../../reducers'\n\nexport function useRedux<T extends Action>(): [RootState, Dispatch<T>] {\n    const {storeState: state, store: {dispatch}} = useContext(ReactReduxContext)\n    return [state, dispatch]\n}\n\nexport default useRedux","import Suggestion from '../interfaces/suggestion'\nimport axios from 'axios'\n\nconst someData: Suggestion[] = new Array(10).fill(\n    {\n        title: 'React dla początkujących',\n        description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.'\n    } as Suggestion\n)\n\nexport const getSuggestions = async () : Promise<Suggestion[]> => {\n    const supporters = (await axios.get('https://randomuser.me/api/?results=3')).data.results\n    const voters = (await axios.get('https://randomuser.me/api/?results=10')).data.results\n\n    return someData.map((s) => ({\n        ...s,\n        supporters,\n        voters\n    }))\n}\n\nexport const submitSuggestion = async (s: Suggestion): Promise<Suggestion> => {\n    return new Promise<Suggestion>((resolve) => {\n        setTimeout(() => {\n            resolve(s)\n        }, 1500)\n    })\n}","import {useEffect} from 'react'\nimport {Dispatch} from 'redux'\nimport {\n    SuggestionActions,\n    SuggestionsAcquired,\n    SuggestionsError,\n    SuggestionSubmitError,\n    SuggestionSubmitOk\n} from '../../actions/suggestions'\nimport {RootState} from '../../reducers'\nimport {SuggestionsState} from '../../reducers/suggestions'\nimport useRedux from '../hooks/use-redux'\nimport {getSuggestions, submitSuggestion} from '../services/community-suggestions'\n\nexport function useSuggestions(): [SuggestionsState, Dispatch<SuggestionActions>] {\n    const [{suggestions: suggestionsState}, dispatch]: [RootState, Dispatch<SuggestionActions>] = useRedux<SuggestionActions>()\n    const {pending, suggestions, submitPending, submittedSuggestion} = suggestionsState\n\n    useEffect(\n        () => {\n            if (pending) {\n                console.log(`effect -> pending change to true detected`)\n                if (suggestions.length > 0) { // TODO init state shall equal null\n                    console.log(`effect -> suggestions are there already & change detected`, suggestions)\n                    dispatch(SuggestionsAcquired(suggestions))\n                } else {\n                    console.log(`effect -> suggestions are empty, getting suggestions...`)\n                    getSuggestions()\n                        .then(r => dispatch(SuggestionsAcquired(r)))\n                        .catch(e => dispatch(SuggestionsError(e)))\n                }\n            }\n\n            if (submitPending && submittedSuggestion) {\n                console.log(`effect -> pending submission change to true detected`)\n\n                submitSuggestion(submittedSuggestion)\n                    .then(r => dispatch(SuggestionSubmitOk(r)))\n                    .catch(e => dispatch(SuggestionSubmitError(e)))\n\n            }\n        },\n        [pending, suggestions, submitPending],\n    )\n\n    return [suggestionsState, dispatch]\n}\n\nexport default useSuggestions","import * as React from 'react'\nimport useSuggestions from './shared/effects/suggestions.effect'\n\nexport const Effects: React.FunctionComponent<{}> = () => {\n    useSuggestions()\n\n    return <div/>\n}","import * as React from 'react'\n// @ts-ignore\nimport {connect} from 'react-redux'\nimport {AnyAction, Dispatch} from 'redux'\nimport {SuggestionsGet} from './actions/suggestions'\n\ninterface InitAppProps {\n    dispatch: Dispatch<AnyAction>\n}\n\nclass InitApp extends React.Component<InitAppProps> {\n\n    public componentDidMount() {\n        console.log(`dispatching initial GET`)\n        this.props.dispatch(SuggestionsGet())\n    }\n\n    public render() {\n        return <div/>\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<AnyAction>): InitAppProps => ({\n    dispatch\n})\n\nexport default connect(null, mapDispatchToProps)(InitApp)","import {css} from 'styled-components'\n\nexport const MOBILE_BREAKPOINT = 850\n\nexport const isMobile = (width: number) => width <= MOBILE_BREAKPOINT\nexport const isDesktop = (width: number) => width > MOBILE_BREAKPOINT\n\nexport const media = {\n    mobile: (...args: any) => css`\n    @media (max-width: ${MOBILE_BREAKPOINT}px) {\n      ${\n        // @ts-ignore\n        css(...args)\n        }\n    }\n  `,\n    desktop: (...args: any) => css`\n    @media (min-width: ${MOBILE_BREAKPOINT + 1}px) {\n      ${\n        // @ts-ignore\n        css(...args)\n        }\n    }\n  `,\n}","import {SuggestionActions, SuggestionActionTypes} from '../actions/suggestions'\nimport Suggestion from '../shared/interfaces/suggestion'\n\nexport interface SuggestionsState {\n    pending: boolean;\n    suggestions: Suggestion[];\n    error: any;\n    submittedSuggestion?: Suggestion,\n    submitPending: boolean,\n    submitError: any;\n}\n\nexport const initialState: SuggestionsState = {\n    pending: false,\n    suggestions: [],\n    error: null,\n    submittedSuggestion: undefined,\n    submitPending: false,\n    submitError: null,\n}\n\nexport const SuggestionsReducer = (state: SuggestionsState = initialState, action: SuggestionActions): SuggestionsState => {\n    switch (action.type) {\n        case SuggestionActionTypes.Submit:\n            console.log(`>>> submit action`)\n            return {\n                ...state,\n                submitPending: true,\n                submitError: null,\n                submittedSuggestion: action.payload,\n            }\n            // TODO block submitting when still loading all suggestions\n        case SuggestionActionTypes.SubmitError:\n            console.log(`>>> submit action error`)\n            return {\n                ...state,\n                submitPending: false,\n                submitError: action.payload,\n            }\n        case SuggestionActionTypes.SubmitOk:\n            console.log(`>>> submit action ok`)\n            return {\n                ...state,\n                submitPending: false,\n                suggestions: [action.payload!, ...state.suggestions]\n            }\n        case SuggestionActionTypes.Get:\n            console.log(`>>> get action`)\n            return {\n                ...state,\n                pending: true,\n            }\n        case SuggestionActionTypes.Acquired:\n            console.log(`>>> acquire action`)\n            return {\n                ...state,\n                pending: false,\n                suggestions: [...state.suggestions, ...action.payload!]\n            }\n        case SuggestionActionTypes.Error:\n            console.log(`>>> error action`)\n            return {\n                ...state,\n                pending: false,\n                error: action.payload,\n            }\n        default:\n            return initialState\n    }\n}\n\n","import { combineReducers } from 'redux';\nimport { SuggestionsReducer, SuggestionsState } from './suggestions';\n\nexport interface RootState {\n    suggestions: SuggestionsState\n}\n\nexport default combineReducers<RootState>({\n    suggestions: SuggestionsReducer,\n});","import { createStore } from 'redux'\nimport communityApp from './reducers/index'\n\nexport default createStore(communityApp)","// styled-components.ts\nimport * as styledComponents from 'styled-components'\nimport {ThemedStyledComponentsModule} from 'styled-components'\n\nimport ThemeInterface from './theme'\n\nconst {\n    default: styled,\n    css,\n    createGlobalStyle,\n    keyframes,\n    ThemeProvider\n} = styledComponents as ThemedStyledComponentsModule<ThemeInterface>\n\nexport {css, createGlobalStyle, keyframes, ThemeProvider, styled}\nexport default styled","import styled from '../../theme/styled'\n\nexport const Button = styled.button`\n  background: transparent;\n  border-radius: 3px;\n  border: 2px solid ${p => p.theme.primaryColor};\n  color: ${p => p.theme.secondaryColor};\n  padding: 0.25em 1em;\n`","import styled from '../../theme/styled'\n// TODO test - border and font color should adjust as theme definition\n// TODO test - font & font-size should be the same as on theme\n\nconst TextArea = styled.textarea`\n  border: ${p => `1px solid ${p.theme.primaryColor}`};\n  border-radius: 5px;\n  outline: 0 none;\n  resize: none;\n  padding: 0;\n  height: 100%;\n  margin-top: 10px;\n`\n\nexport const SubmitDescription = styled(TextArea)``","import styled from '../../theme/styled'\n\nexport const SubmitName = styled.input`\n  border: ${p => `1px solid ${p.theme.primaryColor}\n`};\n`","import * as React from 'react'\nimport {FunctionComponent, useState} from 'react'\nimport {Button} from '../../shared/components/Button'\nimport Suggestion from '../../shared/interfaces/suggestion'\nimport {styled} from '../../theme/styled'\nimport {SubmitDescription} from './SubmitDescription'\nimport {SubmitName} from './SubmitName'\n\nexport interface SubmitForm {\n    onSubmit: (suggestion: Suggestion) => void,\n    disabled: boolean,\n}\n\nconst Container = styled.div`\n  display: flex;\n  height: 200px;\n`\n\nconst InputContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  width: 100%;\n  padding-right: 15px;\n`\n\nconst Submit = styled(Button)`\n  align-self: flex-end;\n  width: 200px;\n  height: 100%;\n  background-color: ${p => p.theme.primaryColorBackground};\n  color: ${p => p.theme.primaryColor};\n  &:hover {\n    color: ${p => p.theme.secondaryColor};\n    background-color: ${p => p.theme.secondaryColorBackground};\n  }\n  \n  &:disabled {\n    color: white;\n    background-color: darkgrey;\n  }\n  \n  transition: all 0.5s;\n`\n\n// export function SubmitForm({onSubmit}: SubmitForm) {\nexport const SubmitForm: FunctionComponent<SubmitForm> = ({onSubmit, disabled}) => {\n    const [title, setTitle] = useState<string>('')\n    const onTitleChange = (event: React.FormEvent<HTMLInputElement>) => setTitle(event.currentTarget.value)\n\n    const [description, setDescription] = useState<string>('')\n    const onDescChange = (event: React.FormEvent<HTMLTextAreaElement>) => setDescription(event.currentTarget.value)\n    const onClick = () => onSubmit({title, description, voters: [], supporters: []})\n\n    return (\n        <Container>\n            <InputContainer>\n                <SubmitName onChange={onTitleChange} value={title}/>\n                <SubmitDescription onChange={onDescChange} value={description}/>\n            </InputContainer>\n            <Submit onClick={onClick} disabled={disabled}>Submit suggestion</Submit>\n        </Container>\n    )\n}","import * as React from 'react'\nimport {SuggestionActions, SuggestionSubmit} from '../actions/suggestions'\nimport useRedux from '../shared/hooks/use-redux'\nimport Suggestion from '../shared/interfaces/suggestion'\nimport {SubmitForm} from './components/SubmitForm'\n\nexport const SubmitSuggestion: React.FunctionComponent<{}> = () => {\n    const [{suggestions}, dispatch] = useRedux<SuggestionActions>()\n    const submitSuggestion = (s: Suggestion) => dispatch(SuggestionSubmit(s))\n\n    return <SubmitForm onSubmit={submitSuggestion} disabled={suggestions.submitPending || suggestions.pending}/>\n}","import * as React from 'react'\nimport {styled} from '../theme/styled'\nimport {StyledProps} from '../theme/styled-props'\nimport ProgressiveImage from 'react-progressive-image'\n\nimport placeholder from './avatar-placeholder.svg'\n\nconst Image = styled.img`\n    vertical-align: middle;\n    width: 50px;\n    height: 50px;\n    border-radius: 50%;\n    \n    :hover {\n      transform: rotate(360deg);\n    }\n    \n    transition: all 0.66s;\n`\n\nexport const Avatar: React.FunctionComponent<{url: string} & StyledProps> = ({url, className}) =>\n    <ProgressiveImage\n        delay={3000}\n        src={url}\n        placeholder={placeholder}\n    >\n        {(src: string) => <Image className={className} src={src}/>}\n    </ProgressiveImage>\n\n","import * as React from 'react'\nimport {Avatar} from '../../people/Avatar'\nimport {default as SuggestionInterface} from '../../shared/interfaces/suggestion'\nimport {styled} from '../../theme/styled'\n\nconst Container = styled.div`\n  padding: 30px;\n  border: 1px solid black;\n  background: #fff;\n  border-radius: 7px;\n  \n  margin-bottom: 90px;\n  \n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: all 0.3s cubic-bezier(.25,.8,.25,1);\n  \n  &:hover {\n    box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);\n  }\n`\n\nconst CondensedAvatar = styled(Avatar)`\n  margin-right: -20px;\n`\n\nexport const Suggestion: React.FunctionComponent<SuggestionInterface> = ({title, description, supporters, voters}) =>\n    <Container>\n        <h3>{title}</h3>\n        <p>{description}</p>\n        <h4>Supporters</h4>\n        { supporters.map((s,i) => <Avatar url={s.picture.medium} key={i}/>) }\n        <h4>Voters</h4>\n        { voters.map((s,i) => <CondensedAvatar url={s.picture.medium} key={i}/>) }\n\n    </Container>","import * as React from 'react'\nimport Suggestion from '../../shared/interfaces/suggestion'\nimport {styled} from '../../theme/styled'\nimport {StyledProps} from '../../theme/styled-props'\nimport {Suggestion as SuggestionView} from './Suggestion'\n\ninterface SuggestionsProps {\n    suggestions: Suggestion[]\n}\n\nconst Container = styled.div`\n  display: flex;\n  width: 100%;\n  flex-wrap: wrap;\n`\n\nexport const Suggestions: React.FunctionComponent<SuggestionsProps & StyledProps> = ({suggestions = []}) => <Container>\n    {suggestions.map((s, i) => <SuggestionView key={i} {...s}/>)}\n</Container>","import * as React from 'react'\nimport {Dispatch} from 'redux'\nimport {SuggestionActions} from '../actions/suggestions'\nimport {RootState} from '../reducers'\nimport useRedux from '../shared/hooks/use-redux'\nimport {styled} from '../theme/styled'\nimport {StyledProps} from '../theme/styled-props'\nimport {Suggestions} from './components/Suggestions'\n\nexport const CommunitySuggestions: React.FunctionComponent<StyledProps> = ({className}) => {\n    const [{suggestions: suggestionsState}, _]: [RootState, Dispatch<SuggestionActions>] = useRedux<SuggestionActions>()\n    const {error, pending, suggestions} = suggestionsState\n    return (\n        <>\n            {pending && <>Loading...</>}\n            {error && <>Error.</>}\n            {!pending && !error && <Suggestions suggestions={suggestions}/>}\n        </>\n    )\n}","import ThemeInterface from './theme'\n\nexport const defaultTheme : ThemeInterface = {\n    primaryColor: 'black',\n    secondaryColor: 'red',\n    primaryColorBackground: 'white',\n    secondaryColorBackground: 'black',\n\n}","import React, {Component} from 'react'\n// @ts-ignore\nimport {Provider} from 'react-redux'\nimport {Normalize} from 'styled-normalize'\nimport {Effects} from './Effects'\nimport InitApp from './InitApp'\nimport {media} from './shared/styles/media'\nimport store from './store'\nimport {SubmitSuggestion} from './submit-form/SubmitSuggestion'\nimport {CommunitySuggestions} from './suggestions/CommunitySuggestions'\nimport {defaultTheme} from './theme/default-theme'\nimport {styled, ThemeProvider} from './theme/styled'\n\nconst CenterColumn = styled.div`\n  margin: 0 auto;\n  width: 75%;\n  max-width: 1200px;\n  min-width: 300px;\n  ${media.desktop`\n    width: 83%;\n  `}\n`\n\nclass App extends Component {\n    render() {\n        return (<Provider store={store}>\n                <InitApp/>\n                <Effects/>\n                <Normalize/>\n                <ThemeProvider theme={defaultTheme}>\n                    <CenterColumn>\n                        <h1>Hello WarsawJS Community!</h1>\n                        <SubmitSuggestion/>\n                        <h1>Community Suggestions:</h1>\n                        <CommunitySuggestions/>\n                    </CenterColumn>\n                </ThemeProvider>\n            </Provider>\n        )\n    }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}